{
  "name": "grunt-rsync-2",
  "description": "Copy files to a (remote) machine with rsync. supports maps with target:source entries",
  "version": "0.1.3",
  "homepage": "https://github.com/maxdaten/grunt-rsync",
  "author": {
    "name": "Jan-Philip Loos",
    "email": "maxdaten@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/maxdaten/grunt-rsync"
  },
  "bugs": {
    "url": "https://github.com/maxdaten/grunt-rsync/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/maxdaten/grunt-rsync/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/grunt-rsync",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "~0.4"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-bump": "*",
    "grunt-contrib-jshint": "*",
    "grunt-contrib-nodeunit": "*",
    "grunt-contrib": "~0.7.0"
  },
  "keywords": [
    "gruntplugin",
    "rsync",
    "copy",
    "remote",
    "scp",
    "file"
  ],
  "readme": "# grunt-rsync-2\n\nCopy files to a (remote) machine running an SSH daemon with 'rsync'.\n\nSee also: https://github.com/jedrichards/grunt-rsync\n\n## Getting Started\n\n*`rsync` has to be installed on the local and remote system. `rsync` must be able to connect to the host without password (e.g. public key authentication)*\n\nInstall with: `npm install grunt-rsync-2`\n\nInside your `grunt.js` file add :\n\n``` javascript\ngrunt.loadNpmTasks('grunt-rsync-2');\n```\n\nand a task named `rsync` (see Configuration)!\n\n## Configuration\n\nAdd a configuration like this:\n\n```javascript\ngrunt.initConfig({\n  ...\n  rsync: {\n        deploy: {\n          files: 'dist/',\n          options: {\n            host      : \"example.com\",\n            port      : \"1023\",\n            user      : \"jdoe\",\n            remoteBase: \"~/production\"\n          }\n        }\n      },\n    ...\n});\n```\n\nThis will transfer the *content* of the `dist` directory (relative to the current directory) to the host directory `~/production` (relative to the user home) on the host `example.com:1023` logged in with `jdoe`.\n\n*Warning: Files on the remote machine will be overridden*\n\n### File option: `files`\n- `files`: defines the files and directories to transfer from local to remote machine. `files` can be an String (supports grunts globbing) or a map of `<String>:<String>` or `<String>:[<String>]`.\n\n#### Examples:\n\n##### Simple file-descriptor:\n\n```javascript\nrsync: {\n  deploy: {\n    files: 'dist/**/*.jpg' // globbing\n    ...\n  }  \n}\n```\nselects all jpg-images from all directories in dist\n\n\n##### Mapping single file-descriptor:\n\n```javascript\nrsync: {\n  deploy: {\n    files: {'images/' : 'dist/**/*.jpg'} // map <String>:<String>\n    options: {\n      ...\n      remoteBase: \"~/production\"\n    }\n  }  \n}\n```\nselects all jpg-images from all directories in `dist` to remote `~/production/images/`\n\n##### Mapping multiple file-descriptor:\n\n```javascript\nrsync: {\n  deploy: {\n    files: {'images/' : ['dist/images/*.jpg', 'dist/img/*.jpg']} // map <String>:[<String>]\n    options: {\n      ...\n      remoteBase: \"~/production\"\n    }\n  }  \n}\n```\nselects all jpg-images from `images` and `img` directories in `dist` to remote `~/production/images/`\n\n\n### rsync options: `options`\n\n- `host`: the hostname or ip (ip4/ip6). *Default: `localhost`*\n- `port`: the port of the ssh server on the host. *Default: `22`*\n- `user`: the user name on the remote to log in with.\n- `remoteBase`: the path from root (defined by the ssh server) to the directory to place the content in.  *Default: `~`*\n- `preserveTimes`: keeps the origin timestamp. *Default: `false`*\n- `preservePermissions`: keeps the rights. *Default: `true`*\n- `compression`: transfer with compression. *Default: `true`*\n- `recursive`: transfer the source directory recursivly *Default: `true`*\n- `additionalOptions`: rsync commandline arguments (see `man rsync`) *Default: `''`*\n\n## Release History\n- 0.1.2.1 : readded done for async calls (thanks to [bigmomma](https://github.com/bigmomma))\n- 0.1.2 : grunt-4.0 support (big thanks to [cmaddalozzo](https://github.com/cmaddalozzo))\n- 0.1.1 : initial release to github and npm\n\n## Contribution\n- [cmaddalozzo](https://github.com/cmaddalozzo)\n- [bigmomma](https://github.com/bigmomma)\n  \n## License\nCopyright (c) 2012 Jan-Philip Loos\nLicensed under the MIT license.\n\n## TODO\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-rsync-2@0.1.3",
  "dist": {
    "shasum": "580c83b7bb1af5ee7c50514cd26fe8753a671270"
  },
  "_from": "grunt-rsync-2@",
  "_resolved": "https://registry.npmjs.org/grunt-rsync-2/-/grunt-rsync-2-0.1.3.tgz"
}
